<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"  %>

<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
<style>
	.document-editor__toolbar{
		width : 800px;
	}
	.editor{
		width : 800px;
		height : 800px;
	
	}
	
	.writer{
		border : 1px solid gray;
		width : 800px;
		
	
	}
	
	#tab{

	}
	
	.signResult{
		width : 60px;
		height : 80px;
	}
	
	td.labeltd{
		width : 200px;
	}
	td.datatd{
		width : 80%;
	}
	
	#approvLineTable{
		width : 100%;
		text-align: center;
	}


</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/signature_pad/1.5.3/signature_pad.min.js"></script>

<script src="/ckeditor5/build/ckeditor.js"></script>
	<script>
	$(function(){
			DecoupledDocumentEditor
			.create( document.querySelector( '.editor' ), {

				toolbar: {
					items: [
						'exportPdf',
						'exportWord',
						'CKFinder',
						'pageBreak',
						'heading',
						'|',
						'fontSize',
						'fontFamily',
						'|',
						'bold',
						'italic',
						'underline',
						'strikethrough',
						'highlight',
						'fontColor',
						'fontBackgroundColor',
						'specialCharacters',
						'|',
						'alignment',
						'|',
						'numberedList',
						'bulletedList',
						'|',
						'indent',
						'outdent',
						'|',
						'horizontalLine',
						'code',
						'codeBlock',
						'htmlEmbed',
						'todoList',
						'link',
						'blockQuote',
						'imageUpload',
						'insertTable',
						'|',
						'undo',
						'redo'
					]
				},
				language: 'ko',
				image: {
					toolbar: [
						'imageTextAlternative',
						'imageStyle:full',
						'imageStyle:side'
					]
				},
				table: {
					contentToolbar: [
						'tableColumn',
						'tableRow',
						'mergeTableCells',
						'tableCellProperties',
						'tableProperties'
					]
				},
				licenseKey: '',
				
				exportPdf : {
						dataCallback: ( editor ) => {
							var html = $('#tab').html();
							var content = editor.getData();
							return html + content;
						}
				},
				
			} )
			.then( editor => {
				window.editor = editor;
		
				
				// Set a custom container for the toolbar.
				document.querySelector( '.document-editor__toolbar' ).appendChild( editor.ui.view.toolbar.element );
				document.querySelector( '.ck-toolbar' ).classList.add( 'ck-reset_all' );
				
				
				const docFrag = editor.model.change( writer => {
					const p1 = writer.createElement( 'paragraph' );
					const p2 = writer.createElement( 'paragraph' );
					const blockQuote = writer.createElement( 'blockQuote' );
					const docFrag = writer.createDocumentFragment();
	
					writer.append( p1, docFrag );
					writer.append( blockQuote, docFrag );
					writer.append( p2, blockQuote );
					writer.insertText( 'foo', p1 );
					writer.insertText( 'bar', p2 );
	
					return docFrag;
				} );
	
				// insertContent() does not have to be used in a change() block. It can, though,
				// so this code could be moved to the callback defined above.
				editor.model.insertContent( docFrag );
				
				
				const content = '${reportVo.content}';
				const viewFragment = editor.data.processor.toView( content );
				const modelFragment = editor.data.toModel( viewFragment );

				editor.model.insertContent( modelFragment );
				
				
				
				
				
				
			} )
			.catch( error => {
				console.error( 'Oops, something went wrong!' );
				console.error( 'Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:' );
				console.warn( 'Build id: ywtaruz06pdl-6v1em39f6r66' );
				console.error( error );
			} );
			
			
		
		fileSlotCnt = 1;
    	maxFileSlot = 5;
    	
    	 $('#btnPlus').on('click', function(){
      	   if(maxFileSlot <= fileSlotCnt){
      		   alert("파일은 총 "+maxFileSlot+"개 까지만 첨부가능합니다.");
      	   }
      	   else{
  			   fileSlotCnt++;
  	    	   console.log("click!!");
  	    	   var html =  "<tr>"
  								+"<td>첨부파일</td>"
			  					+"<td>"
			  						+"<div class='col-sm-10 fileDiv'>"
			  							+"<input type='file' name=fileList["+(fileSlotCnt-1)+"]>"
			  							+"<button type='button' class='btn btn-primary btnMinus' style='outline: 0; border: 0;'>"
			  								+"<i class='fas fa-fw fa-minus' style='color: white; font-size:10px;'></i>"
			  							+"</button>"
			  						+"</div>"
			  					+"</td>"
			  				+"</tr>";
  	    	   $(this).parents('table').append(html);
  	    	   
      	   }
      	   
         });
         
         $('#fileTable').on('click', '.btnMinus', function(){
      	   if(fileSlotCnt > 1){
      		   fileSlotCnt--;
      		   console.log(fileSlotCnt);
      	   }
      	   $(this).parents('tr').remove();
		   
         })
	
		$('#btnLoadSign').on('click', function(){
			var signInfo = "${reportVo.signInfo}";
			var html = '결과 : <img id="signImg" src='+signInfo+' alt="사원서명">';
			$('#signDiv').empty();
			$('#signDiv').append(html);
			$('.signResult').attr('src', signInfo);
			$("#signInfo").val(signInfo);
		})
		
		$('#btnCancel').on('click', function(){
        	 document.location = "/report/settingView?empId=${EMP.empId}";
         })
		
        $('#btnSave').on('click', function(){
        	$('#reportForm').submit();
        })
		
	})
	
	
	
	</script>
	<script>

$(function() {
	 
	
	 var lindwidth = 2;
	
	
	  window.requestAnimFrame = (function(callback) {
	    return window.requestAnimationFrame ||
	      window.webkitRequestAnimationFrame ||
	      window.mozRequestAnimationFrame ||
	      window.oRequestAnimationFrame ||
	      window.msRequestAnimaitonFrame ||
	      function(callback) {
	        window.setTimeout(callback, 1000 / 60);
	      };
	  })()
	  
	  
	  
	  
	  var canvas = document.getElementById("sig-canvas");
	  var ctx = canvas.getContext("2d");
	  ctx.strokeStyle = "#222222";
	  ctx.lineWidth = lindwidth;

	  var drawing = false;
	  var mousePos = {
	    x: 0,
	    y: 0
	  };
	  var lastPos = mousePos;
	  
	  
	  
	  

	  canvas.addEventListener("mousedown", function(e) {
	    drawing = true;
	    lastPos = getMousePos(canvas, e);
	  }, false);

	  canvas.addEventListener("mouseup", function(e) {
	    drawing = false;
	  }, false);

	  canvas.addEventListener("mousemove", function(e) {
	    mousePos = getMousePos(canvas, e);
	  }, false);

	  // Add touch event support for mobile
	  canvas.addEventListener("touchstart", function(e) {

	  }, false);

	  canvas.addEventListener("touchmove", function(e) {
	    var touch = e.touches[0];
	    var me = new MouseEvent("mousemove", {
	      clientX: touch.clientX,
	      clientY: touch.clientY
	    });
	    canvas.dispatchEvent(me);
	  }, false);

	  canvas.addEventListener("touchstart", function(e) {
	    mousePos = getTouchPos(canvas, e);
	    var touch = e.touches[0];
	    var me = new MouseEvent("mousedown", {
	      clientX: touch.clientX,
	      clientY: touch.clientY
	    });
	    canvas.dispatchEvent(me);
	  }, false);

	  canvas.addEventListener("touchend", function(e) {
	    var me = new MouseEvent("mouseup", {});
	    canvas.dispatchEvent(me);
	  }, false);

	  function getMousePos(canvasDom, mouseEvent) {
	    var rect = canvasDom.getBoundingClientRect();
	    return {
	      x: mouseEvent.clientX - rect.left,
	      y: mouseEvent.clientY - rect.top
	    }
	  }

	  function getTouchPos(canvasDom, touchEvent) {
	    var rect = canvasDom.getBoundingClientRect();
	    return {
	      x: touchEvent.touches[0].clientX - rect.left,
	      y: touchEvent.touches[0].clientY - rect.top
	    }
	  }

	  function renderCanvas() {
	    if (drawing) {
	      ctx.moveTo(lastPos.x, lastPos.y);
	      ctx.lineTo(mousePos.x, mousePos.y);
	      ctx.stroke();
	      lastPos = mousePos;
	    }
	  }

	  // Prevent scrolling when touching the canvas
	  document.body.addEventListener("touchstart", function(e) {
	    if (e.target == canvas) {
	      e.preventDefault();
	    }
	  }, false);
	  document.body.addEventListener("touchend", function(e) {
	    if (e.target == canvas) {
	      e.preventDefault();
	    }
	  }, false);
	  document.body.addEventListener("touchmove", function(e) {
	    if (e.target == canvas) {
	      e.preventDefault();
	    }
	  }, false);

	  (function drawLoop() {
	    requestAnimFrame(drawLoop);
	    renderCanvas();
	  })();

	  function clearCanvas() {
		// 픽셀 정리
	    ctx.clearRect(0, 0, canvas.width, canvas.height);
	    // 컨텍스트 리셋
	    ctx.beginPath();
	  }
	  
	  
	  
	  
	  // Set up the UI
	  var sigImage = document.getElementById("sig-image");
	  var clearBtn = document.getElementById("sig-clearBtn");
	  var submitBtn = document.getElementById("sig-submitBtn");
	  
	  
	  clearBtn.addEventListener("click", function(e) {
	    clearCanvas();
	    $('#signImg').remove();
	  }, false);
	  
	  
	  submitBtn.addEventListener("click", function(e) {
	    var dataUrl = canvas.toDataURL();
	    // 간략 url
	    var html = '결과 : <img id="signImg" src='+dataUrl+' alt="사원서명">';
	    $('#signDiv').empty();
	    $('#signDiv').append(html);
	    $('.signResult').attr('src', dataUrl);
	    $("#signInfo").val(dataUrl);
	    $('#reportContent').val(editor.getData());

	  }, false);

	});

</script>
	
</head>

<body>
	<h2>기안문 작성</h2>
	<hr>
	<div class="writer">
		
		<form:form id="reportForm" commandName="reportVo" action="/report/insertReport" method="post" enctype="multipart/form-data">
			<form:hidden path="typeId"/>
			<form:hidden path="reportSt"/>
			<form:hidden path="apprKind"/>
			<input type="hidden" name="empId" value="${EMP.empId}">
			<form:hidden path="approver"/>
			<input type="hidden" id="reportContent" name="content" value=""/>
			<input type="hidden" id="signInfo" name="reportSignList[0].signInfo" value="" style="width : 100%;">
			<div id="tab">
							
				<table id="reportInfo" border="1">
					<tr>
						<td class="labeltd">기안번호</td>
						<td class="datatd"><form:input path="reportId"  readonly="true"/></td>
					</tr>
					
					<tr>
						<td class="labeltd">기안날짜</td>
						<td class="datatd">
							<fmt:parseDate var="reportDt" value="${reportVo.reportDt }" pattern="yyyy-MM-dd HH:mm"/>
							<fmt:formatDate value="${reportDt }" pattern="yyyy-MM-dd HH:mm"/>
						</td>
					</tr>
					<tr>
						<td class="labeltd">기안자</td>
						<td class="datatd">${EMP.empNm }</td>
					</tr>
					
					<tr>
						<td class="labeltd">결재라인</td>
						<td class="datatd">
								<table id="approvLineTable" border="1">
									<thead>
										<tr>
											<th>담당</th>
											<c:forEach begin="0" end="${reportVo.approvLineList.size()-2 }">
												<th>검토</th>
											</c:forEach>
											<th>승인</th>
										</tr>	
									</thead>
									<tbody>
										<tr>
											<td>${EMP.empNm }</td>
											<c:forEach items="${reportVo.approvLineList }" var="approvLine" varStatus="status">
												<td>${approvLine.currEmpNm }&nbsp;${approvLine.currJobNm }</td>
											</c:forEach>
										</tr>
										<tr>
											<td class="sign"><img class="signResult" src="" alt="서명"></td>
											<c:forEach begin="0" end="${reportVo.approvLineList.size()-1 }">
												<td class="sign"><img class="signResult" src="" alt="서명"></td>
											</c:forEach>
										</tr>
									</tbody>
								</table>
						</td>
					</tr>
					
					<tr>
						<td class="labeltd">제목 </td>
						<td class="datatd"><form:input path="title" cssStyle="width : 100%;"/></td>
					</tr>
					
				
			<%-- 	제목 : <form:input path="title"/>
				<br>
				본문 :
				<br>
				결재라인 :
				
				<br>
					<form:textarea path="content"/>
				<br>
					<div>
						<input type="file">
					</div> --%>
			</table>
			
			
			</div>
		
		
		<div class="document-editor__toolbar"></div>
		<div class="editor"></div>
		<table style="width : 100%;" id="fileTable">
			<tr>
				<td>첨부파일</td>
				<td>
					<div id="fileDiv" class="col-sm-10">
						<input type="file" name="fileList[0]">
						<button type="button" id="btnPlus" class="btn btn-primary" style="outline: 0; border: 0;">
							<i class="fas fa-fw fa-plus" style="color: white; font-size:10px;"></i>
						</button>
					</div>
				</td>
			</tr>
		</table>
		
		</form:form>
		
		<div style="float : right;">
			<button type="button" id="insertReport" class="btn btn-primary" data-toggle="modal" data-target="#insertReportModal">
					작성완료
			</button>
			<button type="button" class="btn btn-secondary" id="btnCancel">작성취소</button>
		</div>
			
	</div>
	
	<!-- 결재라인 저장 Modal -->
			<div class="modal fade" id="insertReportModal" tabindex="-1" role="dialog" aria-labelledby="insertReportTitle" aria-hidden="true">
			  <div class="modal-dialog modal-dialog-centered" role="document">
			    <div class="modal-content">
			      <div class="modal-header">
			        <h5 class="modal-title" id="insertReportTitle">서명</h5>
			        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
			          <span aria-hidden="true">&times;</span>
			        </button>
			      </div>
			      <div class="modal-body" style="vertical-align: middle;">
			        	<table>
			        		<tr><td>
		        				<!-- Content -->
								<div class="container">
									<div class="row">
										<div class="col-md-12">
											<h4>사인을 입력해주세요</h4>
											<hr>
										</div>
									</div>
									<div class="row">
										<div class="col-md-12">
									 		<canvas id="sig-canvas" width="300" height="160" style="border: 1px solid black;">
									 			Get a better browser, bro.
									 		</canvas>
									 	</div>
									</div>
									<div class="row">
										<div class="col-md-12">
									        <button type="button" id="btnLoadSign" class="btn btn-primary" style="float : left;">불러오기</button>
											<button class="btn btn-primary" id="sig-submitBtn" style="float: right;">적용</button>
											<button class="btn btn-default" id="sig-clearBtn" style="float : right;">지우기</button>
										</div>
									</div>
								</div>
	
								<div id="signDiv">
									결과 :
								</div>
			        		</td></tr>
			        	
			        	</table>
			        	
			      </div>
			      <div class="modal-footer">
			        <button type="button" id="btnSave" class="btn btn-primary">등록</button>
			        <button type="button" class="btn btn-secondary" data-dismiss="modal">취소</button>
			      </div>
			    </div>
			  </div>
			</div>

</body>
</html>
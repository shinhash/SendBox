<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.business.library.dao.LibMapperDao">

<select id="libList" parameterType="kr.or.ddit.business.library.vo.LibVO" resultType="kr.or.ddit.business.library.vo.LibVO">
	SELECT fileT.file_seq, fileT.file_real_nm, fileT.file_path, fileT.file_icon_id, fileT.emp_id, fileT.file_size, fileT.LIBRARY_ID,
	        iconT.FILE_ICON_PATH, iconT.file_type
	FROM (SELECT *
	      FROM lib_file) fileT,    
	     (SELECT *
	      FROM file_icon) iconT
	WHERE fileT.FILE_ICON_ID = iconT.FILE_ICON_ID(+)
	AND fileT.FILE_ST = 'Y'
	AND fileT.PAR_FILE_ID = '0'
	<if test="libraryId!=null">
		AND fileT.library_id = #{libraryId }
	</if>
	order by decode(file_icon_id,'folder',file_icon_id),file_seq desc
</select>

<select id="folderSearch" parameterType="kr.or.ddit.business.library.vo.LibVO" resultType="kr.or.ddit.business.library.vo.LibVO">
SELECT fileT.file_seq, fileT.file_real_nm, fileT.file_path, fileT.file_icon_id,
		   fileT.emp_id, fileT.file_size, fileT.LIBRARY_ID,
	        iconT.FILE_ICON_PATH, iconT.file_type
	        ,fileT.PAR_FILE_ID
	FROM (SELECT *
	      FROM lib_file) fileT,    
	     (SELECT *
	      FROM file_icon) iconT
	WHERE fileT.FILE_ICON_ID = iconT.FILE_ICON_ID(+)
	AND fileT.FILE_ST = 'Y'
	AND fileT.PAR_FILE_ID = #{fileSeq}
    ORDER BY FILE_SEQ DESC
</select>

<select id="fileSelect" parameterType="kr.or.ddit.business.library.vo.LibVO" resultType="kr.or.ddit.business.library.vo.LibVO">
	SELECT *
	FROM lib_file
	WHERE file_seq = #{fileSeq }
</select>

<select id="libSelect" parameterType="kr.or.ddit.business.library.vo.LibEmpVO" resultType="kr.or.ddit.business.library.vo.LibEmpVO">
	select A.*
		from library A, (select *
		                  from dept
						   <choose>
						   	<when test="deptId == '0000'">
						   		where dept_id = #{deptId} )B
						   	</when>
						   	<otherwise>
						   		start with dept_id = #{deptId}
						        connect by prior dept_id = upper_dept_id
						        order siblings by dept_id)B
						   	</otherwise>
						   </choose>
	where A.dept_id = B.dept_id
</select>

<insert id="fileUpload" parameterType="kr.or.ddit.business.library.vo.LibVO">
	INSERT INTO lib_file (
	    file_seq, library_id, file_real_nm, file_path, file_icon_id, 
	    file_in_dt, file_st, emp_id, file_size, file_folder, par_file_id
	) VALUES (
	    file_seq.nextval, #{libraryId }, #{fileRealNm}, #{filePath}, #{fileIconId}, sysdate, 
	    'Y', #{empId}, #{fileSize}, #{fileFolder}, #{parFileId}
	   
	)
</insert>

<update id="deleteFile" parameterType="kr.or.ddit.business.library.vo.LibVO">
	UPDATE lib_file
	   SET file_st = 'N'
	 WHERE file_seq = #{fileSeq}
</update>

<insert id="folderUpload" parameterType="kr.or.ddit.business.library.vo.LibVO">
	INSERT INTO lib_file (
	    file_seq, library_id, file_real_nm, file_path, file_icon_id,
	    file_in_dt, file_st, emp_id, file_folder, par_file_id
	) VALUES (
	    file_seq.nextval, #{libraryId}, #{fileRealNm}, #{filePath}, 'folder',
	    sysdate, 'Y', #{empId}, 'D', 0)
</insert>

<update id="fileChange" parameterType="kr.or.ddit.business.library.vo.LibVO">
	UPDATE lib_file
	    SET
	        file_real_nm = #{fileRealNm},
	        file_in_dt = sysdate
	        <if test="parFileId != null">
	        ,par_file_id = #{parFileId}
	        </if>
	WHERE
	    file_seq = #{fileSeq}
</update>




</mapper>
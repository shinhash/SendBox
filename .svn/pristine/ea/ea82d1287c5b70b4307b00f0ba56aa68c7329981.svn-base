<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"  %>


<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
<style>
	.document-editor__toolbar{
		width : 800px;
	}
	.editor{
		width : 800px;
		height : 800px;
	
	}
	
	.writer{
		border : 1px solid gray;
		width : 800px;
	}
	
	.ck.ck-widget__selection-handler {
	  display: none;
	}

	.ck.ck-content.ck-editor__editable.ck-rounded-corners.ck-editor__editable_inline.ck-blurred > figure,
	.ck.ck-content.ck-editor__editable.ck-rounded-corners.ck-editor__editable_inline.ck-focused > figure {
	  margin: 16px 0;
	}
	
	
	/* #tab{

	}
	
	.signResult{
		width : 60px;
		height : 80px;
	}
	
	td.labeltd{
		width : 200px;
	}
	td.datatd{
		width : 80%;
	}
	
	#approvLineTable{
		width : 100%;
		text-align: center;
	} */

</style>


	
	
	
	
	
	

	
</head>

<body data-editor="DecoupledDocumentEditor" data-collaboration="false">
	<h2>기안문 작성</h2>
	<hr>
	<div class="document-editor__toolbar"></div>
	<div class="editor2"></div>
	<div class="editor"></div>
	<div class="writer">

		
	<div>
	
	<script src="/ckeditor5/build/ckeditor.js"></script>
	<script>
	$(function(){
			DecoupledDocumentEditor
			.create( document.querySelector( '.editor' ), {

				toolbar: {
					items: [
						'exportPdf',
						'exportWord',
					]
				},
				language: 'ko',
				image: {
					toolbar: [
						'imageTextAlternative',
						'imageStyle:full',
						'imageStyle:side'
					]
				},
				table: {
					contentToolbar: [
						'tableColumn',
						'tableRow',
						'mergeTableCells',
						'tableCellProperties',
						'tableProperties'
					]
				},
				licenseKey: '',
				
				exportPdf : {
					dataCallback: ( editor ) => {
						//var html = $('#tab').html();
						var content = editor.getData();
						return content;
					}
				},
				
			} )
			.then( editor => {
				window.editor = editor;
		
				
				// Set a custom container for the toolbar.
				document.querySelector( '.document-editor__toolbar' ).appendChild( editor.ui.view.toolbar.element );
				document.querySelector( '.ck-toolbar' ).classList.add( 'ck-reset_all' );
				
				
				/* const docFrag = editor.model.change( writer => {
					const p1 = writer.createElement( 'paragraph' );
					const p2 = writer.createElement( 'paragraph' );
					const blockQuote = writer.createElement( 'blockQuote' );
					const docFrag = writer.createDocumentFragment();
	
					writer.append( p1, docFrag );
					writer.append( blockQuote, docFrag );
					writer.append( p2, blockQuote );
					writer.insertText( 'foo', p1 );
					writer.insertText( 'bar', p2 );
	
					return docFrag;
				} );
	
				// insertContent() does not have to be used in a change() block. It can, though,
				// so this code could be moved to the callback defined above.
				editor.model.insertContent( docFrag );
				 */
				
				const content = '${reportVo.content}';
				const viewFragment = editor.data.processor.toView( content );
				const modelFragment = editor.data.toModel( viewFragment );

				editor.model.insertContent( modelFragment );
				
				editor.isReadOnly = true;
				/*$('*[contenteditable="true"]').attr('contenteditable', false);
				$('*[contenteditable="true"]').attr('contenteditable', false);
				
				$('div.ck.ck-widget__selection-handle').css({'display' : 'none'}); */
			} )
			.catch( error => {
				console.error( 'Oops, something went wrong!' );
				console.error( 'Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:' );
				console.warn( 'Build id: ywtaruz06pdl-6v1em39f6r66' );
				console.error( error );
			} );
			
		
	});
	
	</script>
	
	
	
	
</body>
</html>